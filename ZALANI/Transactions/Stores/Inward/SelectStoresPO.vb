
Imports BL

Public Class SelectStoresPO

    Public PARTYNAME As String = ""
    Public PONO As Integer = 0
    Public FRMSTRING As String = ""
    Public DT As New DataTable

    Private Sub cmdexit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub SelectStoresPO_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        If e.KeyCode = Windows.Forms.Keys.Escape Then
            Me.Close()
        ElseIf e.KeyCode = Keys.Enter Then
            SendKeys.Send("{Tab}")
        End If
    End Sub

    Private Sub SelectStoresPO_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        fillgrid()
    End Sub

    Sub fillgrid()
        Try
            Cursor.Current = Cursors.WaitCursor

            Dim where As String = ""
            If PONO <> 0 Then where = where & " AND PONO = " & PONO
            If PARTYNAME <> "" Then where = where & " AND NAME = '" & PARTYNAME & "'"


            Dim OBJCMN As New ClsCommon()
            Dim dt As DataTable = OBJCMN.search("*", "", " (SELECT STORESPURCHASEORDER.PO_NO AS PONO, STORESPURCHASEORDER.PO_DATE AS DATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(STORESPURCHASEORDER.PO_REMARKS, '') AS REMARKS, STORESPURCHASEORDER_DESC.PO_GRIDSRNO AS GRIDSRNO, ISNULL(STOREITEMMASTER.STOREITEM_name, '') AS ITEMNAME, ISNULL(STORESPURCHASEORDER_DESC.PO_GRIDREMARKS, '') AS GRIDREMARKS, (STORESPURCHASEORDER_DESC.PO_QTY - STORESPURCHASEORDER_DESC.PO_RECDQTY) AS QTY, ISNULL(STORESPURCHASEORDER_DESC.PO_RATE, 0) AS RATE, ISNULL(STORESPURCHASEORDER_DESC.PO_RECDQTY, 0) AS RECDQTY, ISNULL(STORESPURCHASEORDER_DESC.PO_DONE, 0) AS GRIDPODONE, ISNULL(STORESPURCHASEORDER_DESC.PO_CLOSED, 0) AS CLOSED, 'PURCHASEORDER' AS TYPE, ISNULL(UNITMASTER.UNIT_ABBR,'') AS UNIT FROM  STORESPURCHASEORDER INNER JOIN STORESPURCHASEORDER_DESC ON STORESPURCHASEORDER.PO_NO = STORESPURCHASEORDER_DESC.PO_NO AND STORESPURCHASEORDER.PO_YEARID = STORESPURCHASEORDER_DESC.PO_YEARID INNER JOIN STOREITEMMASTER ON STORESPURCHASEORDER_DESC.PO_ITEMID = STOREITEMMASTER.STOREITEM_id INNER JOIN LEDGERS ON STORESPURCHASEORDER.PO_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN UNITMASTER ON STORESPURCHASEORDER_DESC.PO_QTYUNITID = UNITMASTER.UNIT_ID WHERE STORESPURCHASEORDER_DESC.PO_CLOSED = 'FALSE' and (STORESPURCHASEORDER_DESC.PO_QTY-STORESPURCHASEORDER_DESC.PO_RECDQTY)>0 AND dbo.STORESPURCHASEORDER.PO_yearid=" & YearId & " UNION ALL SELECT  OPENINGSTORESPURCHASEORDER.OPO_NO AS PONO, OPENINGSTORESPURCHASEORDER.OPO_DATE AS PODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(OPENINGSTORESPURCHASEORDER.OPO_REMARKS, '') AS REMARKS, OPENINGSTORESPURCHASEORDER_DESC.OPO_GRIDSRNO AS POGRIDSRNO, ISNULL(STOREITEMMASTER.STOREITEM_name, '') AS ITEMNAME, ISNULL(OPENINGSTORESPURCHASEORDER_DESC.OPO_GRIDREMARKS, '') AS GRIDREMARKS,  (OPENINGSTORESPURCHASEORDER_DESC.OPO_QTY - OPENINGSTORESPURCHASEORDER_DESC.OPO_RECDQTY) AS QTY, ISNULL(OPENINGSTORESPURCHASEORDER_DESC.OPO_RATE, 0) AS RATE, ISNULL(OPENINGSTORESPURCHASEORDER_DESC.OPO_RECDQTY, 0) AS RECDQTY, ISNULL(OPENINGSTORESPURCHASEORDER_DESC.OPO_DONE, 0) AS GRIDPODONE, ISNULL(OPENINGSTORESPURCHASEORDER_DESC.OPO_CLOSED, 0) AS CLOSED, 'OPENING' AS TYPE, ISNULL(UNITMASTER.UNIT_ABBR,'') AS UNIT FROM OPENINGSTORESPURCHASEORDER INNER JOIN OPENINGSTORESPURCHASEORDER_DESC ON OPENINGSTORESPURCHASEORDER.OPO_NO = OPENINGSTORESPURCHASEORDER_DESC.OPO_NO AND OPENINGSTORESPURCHASEORDER.OPO_YEARID = OPENINGSTORESPURCHASEORDER_DESC.OPO_YEARID INNER JOIN STOREITEMMASTER ON OPENINGSTORESPURCHASEORDER_DESC.OPO_ITEMID = STOREITEMMASTER.STOREITEM_id INNER JOIN LEDGERS ON OPENINGSTORESPURCHASEORDER.OPO_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN UNITMASTER ON OPENINGSTORESPURCHASEORDER_DESC.OPO_QTYUNITID = UNITMASTER.UNIT_ID WHERE OPENINGSTORESPURCHASEORDER_DESC.OPO_CLOSED = 'FALSE' and (OPENINGSTORESPURCHASEORDER_DESC.OPO_QTY-OPENINGSTORESPURCHASEORDER_DESC.OPO_RECDQTY)>0 AND dbo.OPENINGSTORESPURCHASEORDER.OPO_yearid=" & YearId & ") AS T", where & " ORDER BY PONO, GRIDSRNO")
            gridbilldetails.DataSource = dt
            If dt.Rows.Count > 0 Then
                gridbill.FocusedRowHandle = gridbill.RowCount - 1
                gridbill.TopRowIndex = gridbill.RowCount - 15
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        Finally
            Cursor.Current = Cursors.Default

        End Try
    End Sub

    Private Sub cmdok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdok.Click
        Try

            DT.Columns.Add("PONO")
            DT.Columns.Add("NAME")
            DT.Columns.Add("PODATE")
            DT.Columns.Add("GRIDSRNO")
            DT.Columns.Add("ITEMNAME")
            DT.Columns.Add("QTY")
            DT.Columns.Add("UNIT")
            DT.Columns.Add("RATE")
            DT.Columns.Add("TYPE")
            DT.Columns.Add("REMARKS")


            Dim SELECTEDROWS As Int32() = gridbill.GetSelectedRows()
            For I As Integer = 0 To Val(SELECTEDROWS.Length - 1)
                Dim dtrow As DataRow = gridbill.GetDataRow(SELECTEDROWS(I))
                DT.Rows.Add(dtrow("PONO"), dtrow("NAME"), dtrow("DATE"), Val(dtrow("GRIDSRNO")), dtrow("ITEMNAME"), Val(dtrow("QTY")), dtrow("UNIT"), Val(dtrow("RATE")), dtrow("TYPE"), dtrow("REMARKS"))
            Next
            Me.Close()

        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub


End Class