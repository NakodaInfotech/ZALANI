
Imports BL
Imports DevExpress.XtraGrid.Views.Grid

Public Class SelectBills

    Public CMPNAME As String = ""
    Public BILLNO As String = ""
    Public REFNO As String = ""
    Public BILLDATE As Date = Now.Date
    Public FRMSTRING As String = ""
    Public BILLINTWHERECLAUSE As String = ""
    Public BILLINTPRINTWHERECLAUSE As String = ""

    Private Sub cmdcancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdcancel.Click
        Me.Close()
    End Sub

    Private Sub cmdok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdok.Click
        Try
            If FRMSTRING = "BILLINTEREST" Then
                For i As Integer = 0 To gridrec.RowCount - 1
                    Dim dtrow As DataRow = gridrec.GetDataRow(i)
                    If Convert.ToBoolean(dtrow("CHK")) = True Then
                        If BILLINTWHERECLAUSE = "" Then
                            BILLINTWHERECLAUSE = " AND (AGAINSTINITIALS = '" & dtrow("SRNO") & "'"
                            BILLINTPRINTWHERECLAUSE = " AND ({INTERESTVIEWBILLREPORT.BILLINITIALS} = '" & dtrow("SRNO") & "'"
                        Else
                            BILLINTWHERECLAUSE = BILLINTWHERECLAUSE & " OR AGAINSTINITIALS = '" & dtrow("SRNO") & "'"
                            BILLINTPRINTWHERECLAUSE = BILLINTPRINTWHERECLAUSE & " OR {INTERESTVIEWBILLREPORT.BILLINITIALS} = '" & dtrow("SRNO") & "'"
                        End If
                    End If
                Next
                If BILLINTWHERECLAUSE <> "" Then BILLINTWHERECLAUSE = BILLINTWHERECLAUSE & ")"
                If BILLINTPRINTWHERECLAUSE <> "" Then BILLINTPRINTWHERECLAUSE = BILLINTPRINTWHERECLAUSE & ")"
            Else
                BILLNO = gridrec.GetFocusedRowCellValue("SRNO")
                REFNO = gridrec.GetFocusedRowCellValue("REFNO")
                BILLDATE = gridrec.GetFocusedRowCellValue("DATE")
            End If
            Me.Close()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SelectBills_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Or (e.KeyCode = Keys.X And e.Alt = True) Then
                Me.Close()
            ElseIf e.KeyCode = Keys.E And e.Alt = True Then
                cmdok_Click(sender, e)
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub fillgrid(ByVal TEMPCONDITION)
        Try
            Dim OBJCMN As New ClsCommon
            Dim dt As New DataTable
            If FRMSTRING = "BILLINTEREST" Then
                dt = OBJCMN.search(" *, CAST (0 AS BIT) AS CHK ", "", " (SELECT OPENINGBILL.BILL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, OPENINGBILL.BILL_AMT AS BILLAMT, OPENINGBILL.BILL_BALANCE AS BALAMT, 'OPENING' AS TYPE, OPENINGBILL.BILL_NARRATION AS REFNO, OPENINGBILL.BILL_NO AS BILLNO, OPENINGBILL.BILL_DATE AS DATE, OPENINGBILL.BILL_CMPID AS CMPID, OPENINGBILL.BILL_LOCATIONID AS LOCATIONID, OPENINGBILL.BILL_YEARID AS YEARID, ISNULL(OPENINGBILL.BILL_DISPUTE,0) AS DISPUTE FROM OPENINGBILL INNER JOIN LEDGERS ON OPENINGBILL.BILL_LEDGERID = LEDGERS.Acc_id  UNION ALL  SELECT INVOICEMASTER.INVOICE_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, INVOICEMASTER.INVOICE_GRANDTOTAL AS BILLAMT, INVOICEMASTER.INVOICE_BALANCE AS BALAMT, 'INVOICE' AS TYPE, INVOICEMASTER.INVOICE_REFNO AS REFNO, INVOICEMASTER.INVOICE_NO AS BILLNO, INVOICEMASTER.INVOICE_DATE AS DATE, INVOICEMASTER.INVOICE_CMPID AS CMPID, INVOICEMASTER.INVOICE_LOCATIONID AS LOCATIONID, INVOICEMASTER.INVOICE_YEARID AS YEARID, ISNULL(INVOICEMASTER.INVOICE_DISPUTE,0) AS DISPUTE FROM INVOICEMASTER INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id  UNION ALL SELECT PURCHASEMASTER.BILL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(BILL_RCM,0) = 'FALSE' THEN PURCHASEMASTER.BILL_GRANDTOTAL ELSE (CASE WHEN ISNULL(BILL_SCREENTYPE,'LINE GST') = 'LINE GST' THEN BILL_TOTALTAXABLEAMT ELSE BILL_SUBTOTAL END) END)  AS BILLAMT, PURCHASEMASTER.BILL_BALANCE AS BALAMT, 'PURCHASE' AS TYPE, PURCHASEMASTER.BILL_PARTYBILLNO AS REFNO, PURCHASEMASTER.BILL_NO AS BILLNO, PURCHASEMASTER.BILL_PARTYBILLDATE AS DATE, PURCHASEMASTER.BILL_CMPID AS CMPID, PURCHASEMASTER.BILL_LOCATIONID AS LOCATIONID, PURCHASEMASTER.BILL_YEARID AS YEARID, ISNULL(PURCHASEMASTER.BILL_DISPUTE,0) AS DISPUTE FROM PURCHASEMASTER INNER JOIN LEDGERS ON PURCHASEMASTER.BILL_LEDGERID = LEDGERS.Acc_id UNION ALL SELECT NONPURCHASE.NP_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(NP_RCM,0) = 'TRUE' THEN NP_TOTALTAXABLEAMT ELSE NONPURCHASE.NP_GRANDTOTAL END) AS BILLAMT, NONPURCHASE.NP_BALANCE AS BALAMT, 'NONPURCHASE' AS TYPE, NONPURCHASE.NP_REFNO AS REFNO, NONPURCHASE.NP_NO AS BILLNO, NONPURCHASE.NP_PARTYBILLDATE AS DATE, NONPURCHASE.NP_CMPID AS CMPID, NONPURCHASE.NP_LOCATIONID AS LOCATIONID, NONPURCHASE.NP_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM NONPURCHASE INNER JOIN LEDGERS ON NONPURCHASE.NP_LEDGERID = LEDGERS.Acc_id  UNION ALL SELECT CREDITNOTEMASTER.CN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(CN_RCM,0) = 'TRUE' THEN CN_SUBTOTAL ELSE CREDITNOTEMASTER.CN_GTOTAL END) AS BILLAMT, CREDITNOTEMASTER.CN_BALANCE AS BALAMT, 'CREDITNOTE' AS TYPE, CREDITNOTEMASTER.CN_PARTYREFNO AS REFNO, CREDITNOTEMASTER.CN_NO AS BILLNO, CREDITNOTEMASTER.CN_date AS DATE, CREDITNOTEMASTER.CN_CMPID AS CMPID, CREDITNOTEMASTER.CN_LOCATIONID AS LOCATIONID, CREDITNOTEMASTER.CN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id WHERE CN_date >= '07/01/2017' UNION ALL SELECT DEBITNOTEMASTER.DN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, DEBITNOTEMASTER.DN_GTOTAL AS BILLAMT, DEBITNOTEMASTER.DN_BALANCE AS BALAMT, 'DEBITNOTE' AS TYPE, DEBITNOTEMASTER.DN_initials AS REFNO, DEBITNOTEMASTER.DN_NO AS BILLNO, DEBITNOTEMASTER.DN_date AS DATE, DEBITNOTEMASTER.DN_CMPID AS CMPID, DEBITNOTEMASTER.DN_LOCATIONID AS LOCATIONID, DEBITNOTEMASTER.DN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id WHERE DN_date >= '07/01/2017') AS T ", TEMPCONDITION & " AND T.YEARID =" & YearId & " ORDER BY  T.DATE, T.BILLNO ")
            Else
                dt = OBJCMN.search(" *, CAST (0 AS BIT) AS CHK ", "", " (SELECT OPENINGBILL.BILL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, OPENINGBILL.BILL_AMT AS BILLAMT, OPENINGBILL.BILL_BALANCE AS BALAMT, 'OPENING' AS TYPE, OPENINGBILL.BILL_NARRATION AS REFNO, OPENINGBILL.BILL_NO AS BILLNO, OPENINGBILL.BILL_DATE AS DATE, OPENINGBILL.BILL_CMPID AS CMPID, OPENINGBILL.BILL_LOCATIONID AS LOCATIONID, OPENINGBILL.BILL_YEARID AS YEARID, ISNULL(OPENINGBILL.BILL_DISPUTE,0) AS DISPUTE FROM OPENINGBILL INNER JOIN LEDGERS ON OPENINGBILL.BILL_LEDGERID = LEDGERS.Acc_id  WHERE(OPENINGBILL.BILL_BALANCE > 0) UNION  ALL  SELECT JOURNALMASTER.JOURNAL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, JOURNALMASTER.JOURNAL_CREDIT AS BILLAMT, (JOURNALMASTER.journal_credit-journal_amt) AS BALAMT, 'JOURNAL' AS TYPE, JOURNALMASTER.journal_refno AS REFNO, JOURNALMASTER.JOURNAL_NO AS BILLNO, JOURNALMASTER.JOURNAL_DATE AS DATE, JOURNALMASTER.JOURNAL_CMPID AS CMPID, JOURNALMASTER.JOURNAL_LOCATIONID AS LOCATIONID, JOURNALMASTER.JOURNAL_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM JOURNALMASTER INNER JOIN LEDGERS ON JOURNALMASTER.JOURNAL_LEDGERID = LEDGERS.Acc_id  WHERE(JOURNALMASTER.journal_credit - journal_amt) > 0 AND journal_credit > 0 AND journal_paytype = 'New Ref.' UNION ALL SELECT JOURNALMASTER.JOURNAL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, JOURNALMASTER.JOURNAL_DEBIT AS BILLAMT, (JOURNALMASTER.journal_DEBIT-journal_amt) AS BALAMT, 'JOURNAL' AS TYPE, JOURNALMASTER.journal_refno AS REFNO, JOURNALMASTER.JOURNAL_NO AS BILLNO, JOURNALMASTER.JOURNAL_DATE AS DATE, JOURNALMASTER.JOURNAL_CMPID AS CMPID, JOURNALMASTER.JOURNAL_LOCATIONID AS LOCATIONID, JOURNALMASTER.JOURNAL_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM JOURNALMASTER INNER JOIN LEDGERS ON JOURNALMASTER.JOURNAL_LEDGERID = LEDGERS.Acc_id  WHERE(JOURNALMASTER.journal_debit - journal_amt) > 0 AND journal_debit > 0 AND journal_paytype = 'New Ref.'  UNION ALL  SELECT INVOICEMASTER.INVOICE_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, INVOICEMASTER.INVOICE_GRANDTOTAL AS BILLAMT, INVOICEMASTER.INVOICE_BALANCE AS BALAMT, 'INVOICE' AS TYPE, INVOICEMASTER.INVOICE_REFNO AS REFNO, INVOICEMASTER.INVOICE_NO AS BILLNO, INVOICEMASTER.INVOICE_DATE AS DATE, INVOICEMASTER.INVOICE_CMPID AS CMPID, INVOICEMASTER.INVOICE_LOCATIONID AS LOCATIONID, INVOICEMASTER.INVOICE_YEARID AS YEARID, ISNULL(INVOICEMASTER.INVOICE_DISPUTE,0) AS DISPUTE FROM INVOICEMASTER INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id WHERE INVOICEMASTER.INVOICE_BALANCE > 0 UNION ALL SELECT PURCHASEMASTER.BILL_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(BILL_RCM,0) = 'FALSE' THEN PURCHASEMASTER.BILL_GRANDTOTAL ELSE (CASE WHEN ISNULL(BILL_SCREENTYPE,'LINE GST') = 'LINE GST' THEN BILL_TOTALTAXABLEAMT ELSE BILL_SUBTOTAL END) END)  AS BILLAMT, PURCHASEMASTER.BILL_BALANCE AS BALAMT, 'PURCHASE' AS TYPE, PURCHASEMASTER.BILL_PARTYBILLNO AS REFNO, PURCHASEMASTER.BILL_NO AS BILLNO, PURCHASEMASTER.BILL_PARTYBILLDATE AS DATE, PURCHASEMASTER.BILL_CMPID AS CMPID, PURCHASEMASTER.BILL_LOCATIONID AS LOCATIONID, PURCHASEMASTER.BILL_YEARID AS YEARID, ISNULL(PURCHASEMASTER.BILL_DISPUTE,0) AS DISPUTE FROM PURCHASEMASTER INNER JOIN LEDGERS ON PURCHASEMASTER.BILL_LEDGERID = LEDGERS.Acc_id WHERE PURCHASEMASTER.BILL_BALANCE > 0 UNION ALL SELECT NONPURCHASE.NP_INITIALS AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(NP_RCM,0) = 'TRUE' THEN NP_TOTALTAXABLEAMT ELSE NONPURCHASE.NP_GRANDTOTAL END) AS BILLAMT, NONPURCHASE.NP_BALANCE AS BALAMT, 'NONPURCHASE' AS TYPE, NONPURCHASE.NP_REFNO AS REFNO, NONPURCHASE.NP_NO AS BILLNO, NONPURCHASE.NP_PARTYBILLDATE AS DATE, NONPURCHASE.NP_CMPID AS CMPID, NONPURCHASE.NP_LOCATIONID AS LOCATIONID, NONPURCHASE.NP_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM NONPURCHASE INNER JOIN LEDGERS ON NONPURCHASE.NP_LEDGERID = LEDGERS.Acc_id  WHERE NONPURCHASE.NP_BALANCE > 0 UNION ALL SELECT CREDITNOTEMASTER.CN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, (CASE WHEN ISNULL(CN_RCM,0) = 'TRUE' THEN CN_SUBTOTAL ELSE CREDITNOTEMASTER.CN_GTOTAL END) AS BILLAMT, CREDITNOTEMASTER.CN_BALANCE AS BALAMT, 'CREDITNOTE' AS TYPE, CREDITNOTEMASTER.CN_PARTYREFNO AS REFNO, CREDITNOTEMASTER.CN_NO AS BILLNO, CREDITNOTEMASTER.CN_date AS DATE, CREDITNOTEMASTER.CN_CMPID AS CMPID, CREDITNOTEMASTER.CN_LOCATIONID AS LOCATIONID, CREDITNOTEMASTER.CN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN CREDITNOTEMASTER_BILLDESC ON CREDITNOTEMASTER.CN_NO = CREDITNOTEMASTER_BILLDESC.CN_NO AND CREDITNOTEMASTER.CN_registerid = CREDITNOTEMASTER_BILLDESC.CN_REGISTERID WHERE CREDITNOTEMASTER.CN_BALANCE > 0 AND CN_date >= '07/01/2017'AND CN_BILLNO = '' AND CREDITNOTEMASTER_BILLDESC.CN_NO IS NULL UNION ALL SELECT CREDITNOTEMASTER.CN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, CREDITNOTEMASTER_BILLDESC.CN_AMT AS BILLAMT, CREDITNOTEMASTER_BILLDESC.CN_BALANCE AS BALAMT, 'CREDITNOTE' AS TYPE, CREDITNOTEMASTER.CN_PARTYREFNO AS REFNO, CREDITNOTEMASTER.CN_NO AS BILLNO, CREDITNOTEMASTER.CN_date AS DATE, CREDITNOTEMASTER.CN_CMPID AS CMPID, CREDITNOTEMASTER.CN_LOCATIONID AS LOCATIONID, CREDITNOTEMASTER.CN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id INNER JOIN CREDITNOTEMASTER_BILLDESC ON CREDITNOTEMASTER.CN_NO = CREDITNOTEMASTER_BILLDESC.CN_NO AND CREDITNOTEMASTER.CN_registerid = CREDITNOTEMASTER_BILLDESC.CN_REGISTERID WHERE CREDITNOTEMASTER_BILLDESC.CN_BALANCE > 0 AND CREDITNOTEMASTER_BILLDESC.CN_PAYTYPE = 'New Ref' UNION ALL SELECT DEBITNOTEMASTER.DN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, DEBITNOTEMASTER.DN_GTOTAL AS BILLAMT, DEBITNOTEMASTER.DN_BALANCE AS BALAMT, 'DEBITNOTE' AS TYPE, DEBITNOTEMASTER.DN_initials AS REFNO, DEBITNOTEMASTER.DN_NO AS BILLNO, DEBITNOTEMASTER.DN_date AS DATE, DEBITNOTEMASTER.DN_CMPID AS CMPID, DEBITNOTEMASTER.DN_LOCATIONID AS LOCATIONID, DEBITNOTEMASTER.DN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN DEBITNOTEMASTER_BILLDESC ON DEBITNOTEMASTER.DN_NO = DEBITNOTEMASTER_BILLDESC.DN_NO AND DEBITNOTEMASTER.DN_registerid = DEBITNOTEMASTER_BILLDESC.DN_REGISTERID WHERE DEBITNOTEMASTER.DN_BALANCE > 0 AND DN_date >= '07/01/2017' AND DN_BILLNO = '' AND DEBITNOTEMASTER_BILLDESC.DN_NO IS NULL UNION ALL SELECT DEBITNOTEMASTER.DN_initials AS SRNO, LEDGERS.Acc_cmpname AS NAME, DEBITNOTEMASTER_BILLDESC.DN_AMT AS BILLAMT, DEBITNOTEMASTER_BILLDESC.DN_BALANCE AS BALAMT, 'DEBITNOTE' AS TYPE, DEBITNOTEMASTER.DN_initials AS REFNO, DEBITNOTEMASTER.DN_NO AS BILLNO, DEBITNOTEMASTER.DN_date AS DATE, DEBITNOTEMASTER.DN_CMPID AS CMPID, DEBITNOTEMASTER.DN_LOCATIONID AS LOCATIONID, DEBITNOTEMASTER.DN_YEARID AS YEARID, CAST (0 AS BIT) AS DISPUTE FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id INNER JOIN DEBITNOTEMASTER_BILLDESC ON DEBITNOTEMASTER.DN_NO = DEBITNOTEMASTER_BILLDESC.DN_NO AND DEBITNOTEMASTER.DN_registerid = DEBITNOTEMASTER_BILLDESC.DN_REGISTERID WHERE DEBITNOTEMASTER_BILLDESC.DN_BALANCE > 0 and DEBITNOTEMASTER_BILLDESC.DN_PAYTYPE = 'New Ref') AS T ", TEMPCONDITION & " AND T.BALAMT > 0 AND T.YEARID =" & YearId & " ORDER BY T.TYPE, T.BILLNO ")
            End If
            griddetails.DataSource = dt
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SelectBills_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            Receipt.SELECTEDBILLNO = ""
            Dim CONDITION As String = ""
            If CMPNAME <> "" Then CONDITION = " AND T.NAME = '" & CMPNAME & "' "

            If FRMSTRING = "BILLINTEREST" Then
                GCHK.Visible = True
                GCHK.VisibleIndex = 0
            End If

            fillgrid(CONDITION)

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridrec_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles gridrec.DoubleClick
        Try
            cmdok_Click(sender, e)
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CHKSELECTALL_CheckedChanged(sender As Object, e As EventArgs) Handles CHKSELECTALL.CheckedChanged
        Try
            If griddetails.Visible = True Then
                For i As Integer = 0 To gridrec.RowCount - 1
                    Dim dtrow As DataRow = gridrec.GetDataRow(i)
                    dtrow("CHK") = CHKSELECTALL.Checked
                Next
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridrec_RowStyle(sender As Object, e As RowStyleEventArgs) Handles gridrec.RowStyle
        Try
            If e.RowHandle >= 0 Then
                Dim View As GridView = sender
                If View.GetRowCellDisplayText(e.RowHandle, View.Columns("DISPUTE")) = "Checked" Then
                    e.Appearance.BackColor = Color.LightGreen
                End If
                'If View.GetRowCellDisplayText(e.RowHandle, View.Columns("OUTPCS")) > 0 Or View.GetRowCellDisplayText(e.RowHandle, View.Columns("OUTMTRS")) > 0 Then
                '    e.Appearance.Font = New System.Drawing.Font("CALIBRI", 9.0F, System.Drawing.FontStyle.Bold)
                '    e.Appearance.BackColor = Color.Yellow
                'End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
End Class